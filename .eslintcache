[{"C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\reportWebVitals.js":"1","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\components\\column.js":"2","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\components\\card.js":"3","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\App.js":"4","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\index.js":"5"},{"size":362,"mtime":1606192925999,"results":"6","hashOfConfig":"7"},{"size":1322,"mtime":1607762181756,"results":"8","hashOfConfig":"7"},{"size":525,"mtime":1607761643458,"results":"9","hashOfConfig":"7"},{"size":499,"mtime":1607761312370,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1606192925999,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ieaila",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\reportWebVitals.js",[],"C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\components\\column.js",["24"],"import React, {useState} from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport Card from './card';\r\n\r\nconst listOfTasks = [\r\n    {\r\n        id: 1,\r\n        title: 'Write Documentation',\r\n        status: 'New'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Fix Customer Bugs',\r\n        status: 'In Progress'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Restart Server',\r\n        status: 'New'\r\n    }\r\n];\r\n\r\nconst Column = (props) => {\r\n    const [tasks, setTask] = useState(listOfTasks);\r\n    const [{isOver, task}, drop] = useDrop({\r\n        accept: 'Card',\r\n        drop: () => {\r\n            console.log(task);\r\n            const items = tasks.filter(item => item.id !== task.task.id );\r\n            task.task.status = props.name;\r\n            items.push(task.task);\r\n            console.log(items);\r\n            setTask(items);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n            task: monitor.getItem()\r\n        }) \r\n    });\r\n    const filteredTasks = tasks.filter(task => task.status === props.name);\r\n    return (\r\n        <div ref={drop} className=\"column\">\r\n            <h3 className=\"column-title\">{props.name}</h3>\r\n              {filteredTasks.map((task,id) => <Card key={id} task={task} />)}         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column;\r\n","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\components\\card.js",["25"],"import React from 'react';\r\nimport {useDrag} from 'react-dnd';\r\n\r\nconst Card = (props) =>  {\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {type: 'Card', task: props.task},\r\n        begin: () => console.log('Dragging'),\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        }) \r\n    });\r\n    return (\r\n        <div ref={drag} className=\"card\">\r\n            <p><strong>{props.task.title}</strong></p>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\App.js",[],"C:\\Users\\srajsriv\\spark\\online\\samples\\kanban-board-react\\src\\index.js",[],{"ruleId":"26","severity":1,"message":"27","line":25,"column":13,"nodeType":"28","messageId":"29","endLine":25,"endColumn":19},{"ruleId":"26","severity":1,"message":"30","line":5,"column":13,"nodeType":"28","messageId":"29","endLine":5,"endColumn":23},"no-unused-vars","'isOver' is assigned a value but never used.","Identifier","unusedVar","'isDragging' is assigned a value but never used."]