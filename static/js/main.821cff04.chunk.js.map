{"version":3,"sources":["components/card.js","components/column.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useDrag","item","type","task","begin","console","log","collect","monitor","isDragging","drag","ref","className","title","listOfTasks","id","status","Column","useState","tasks","setTask","useDrop","accept","drop","items","filter","name","push","isOver","getItem","filteredTasks","map","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAkBeA,EAfF,SAACC,GAAY,IAAD,EACQC,YAAQ,CACjCC,KAAM,CAACC,KAAM,OAAQC,KAAMJ,EAAMI,MACjCC,MAAO,kBAAMC,QAAQC,IAAI,aACzBC,QAAS,SAACC,GAAD,MAAc,CACnBC,aAAcD,EAAQC,iBALT,mBACAC,GADA,KACbD,WADa,MAQrB,OACI,qBAAKE,IAAKD,EAAME,UAAU,OAA1B,SACI,4BAAG,iCAASb,EAAMI,KAAKU,aCT7BC,EAAc,CAChB,CACIC,GAAI,EACJF,MAAO,sBACPG,OAAQ,OAEZ,CACID,GAAI,EACJF,MAAO,oBACPG,OAAQ,eAEZ,CACID,GAAI,EACJF,MAAO,iBACPG,OAAQ,QA8BDC,EA1BA,SAAClB,GAAW,IAAD,EACGmB,mBAASJ,GADZ,mBACfK,EADe,KACRC,EADQ,OAESC,YAAQ,CACnCC,OAAQ,OACRC,KAAM,WACFlB,QAAQC,IAAIH,GACZ,IAAMqB,EAAQL,EAAMM,QAAO,SAAAxB,GAAI,OAAIA,EAAKc,KAAOZ,EAAKA,KAAKY,MACzDZ,EAAKA,KAAKa,OAASjB,EAAM2B,KACzBF,EAAMG,KAAKxB,EAAKA,MAChBE,QAAQC,IAAIkB,GACZJ,EAAQI,IAEZjB,QAAS,SAACC,GAAD,MAAc,CACnBoB,SAAUpB,EAAQoB,SAClBzB,KAAMK,EAAQqB,cAdA,0BAEN1B,GAFM,EAEdyB,OAFc,EAENzB,MAAOoB,EAFD,KAiBhBO,EAAgBX,EAAMM,QAAO,SAAAtB,GAAI,OAAIA,EAAKa,SAAWjB,EAAM2B,QACjE,OACI,sBAAKf,IAAKY,EAAMX,UAAU,SAA1B,UACI,oBAAIA,UAAU,eAAd,SAA8Bb,EAAM2B,OACjCI,EAAcC,KAAI,SAAC5B,EAAKY,GAAN,OAAa,cAAC,EAAD,CAAeZ,KAAMA,GAAVY,U,gBCvB1CiB,EAdH,WACV,OACE,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACE,sBAAKvB,UAAU,MAAf,UACE,8BAAK,iDACL,cAAC,EAAD,CAAQc,KAAK,QACb,cAAC,EAAD,CAAQA,KAAK,gBACb,cAAC,EAAD,CAAQA,KAAK,cACb,cAAC,EAAD,CAAQA,KAAK,oBCFNU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.821cff04.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useDrag} from 'react-dnd';\r\n\r\nconst Card = (props) =>  {\r\n    const [{isDragging}, drag] = useDrag({\r\n        item: {type: 'Card', task: props.task},\r\n        begin: () => console.log('Dragging'),\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging()\r\n        }) \r\n    });\r\n    return (\r\n        <div ref={drag} className=\"card\">\r\n            <p><strong>{props.task.title}</strong></p>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, {useState} from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport Card from './card';\r\n\r\nconst listOfTasks = [\r\n    {\r\n        id: 1,\r\n        title: 'Write Documentation',\r\n        status: 'New'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Fix Customer Bugs',\r\n        status: 'In Progress'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Restart Server',\r\n        status: 'New'\r\n    }\r\n];\r\n\r\nconst Column = (props) => {\r\n    const [tasks, setTask] = useState(listOfTasks);\r\n    const [{isOver, task}, drop] = useDrop({\r\n        accept: 'Card',\r\n        drop: () => {\r\n            console.log(task);\r\n            const items = tasks.filter(item => item.id !== task.task.id );\r\n            task.task.status = props.name;\r\n            items.push(task.task);\r\n            console.log(items);\r\n            setTask(items);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n            task: monitor.getItem()\r\n        }) \r\n    });\r\n    const filteredTasks = tasks.filter(task => task.status === props.name);\r\n    return (\r\n        <div ref={drop} className=\"column\">\r\n            <h3 className=\"column-title\">{props.name}</h3>\r\n              {filteredTasks.map((task,id) => <Card key={id} task={task} />)}         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column;\r\n","import './App.css';\nimport Column from './components/column';\nimport {DndProvider} from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\n\n\nconst App = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <div><h1>Kanband Board</h1></div>\n        <Column name='New' />\n        <Column name='In Progress' />\n        <Column name='In Review' />\n        <Column name='Completed' />\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}